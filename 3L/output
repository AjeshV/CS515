********** PROGRAM OUTPUT ********
+++++++TEST queue 1 ++++++++
testing empty queue
correct
testing enqueues
looking at output should be 0,10,20,30,40,50,60,70,80,90
0
10
20
30
40
50
60
70
80
90
done
testing dequeues
dump of empty queue
+++++++TEST queue 2 ++++++++
testing enqueues and dequeues
there should be no outputs
+++++++TEST queue 3 ++++++++
testing queueing and dequeueing on almost full queue
should be all zero's
0
0
0
0
0
0
0
0
0
0
output should be 9990,9991,9992,9993,9994,9995,9996,9997,9998,9999
9990
9991
9992
9993
9994
9995
9996
9997
9998
9999
+++++++TEST queue 4 ++++++++
testing mildly filled queue
should output 11107 to 11110
11107
11108
11109
11110
nothing should be output after here
+++++++TEST stack 1 ++++++++
+++++++TEST stack 2 ++++++++
exception caught
exception caught
+++++++TEST stack 3 ++++++++
test done
+++++++TEST stack 4 ++++++++
testing done
+++++++++Valgrind checks++++++
==106587== Memcheck, a memory error detector
==106587== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==106587== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==106587== Command: ./stacktest3
==106587== 
test done
==106587== 
==106587== HEAP SUMMARY:
==106587==     in use at exit: 0 bytes in 0 blocks
==106587==   total heap usage: 6 allocs, 6 frees, 76,952 bytes allocated
==106587== 
==106587== All heap blocks were freed -- no leaks are possible
==106587== 
==106587== For counts of detected and suppressed errors, rerun with: -v
==106587== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


==106589== Memcheck, a memory error detector
==106589== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==106589== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==106589== Command: ./stacktest4
==106589== 
testing done
==106589== 
==106589== HEAP SUMMARY:
==106589==     in use at exit: 0 bytes in 0 blocks
==106589==   total heap usage: 4 allocs, 4 frees, 77,600 bytes allocated
==106589== 
==106589== All heap blocks were freed -- no leaks are possible
==106589== 
==106589== For counts of detected and suppressed errors, rerun with: -v
==106589== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
