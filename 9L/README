CS515 Lab 9
Name: Ajesh Vijay Vijayaragavan
uid: avv1004
Section: 1

mysterySort1 is Bubble Sort
Your evidence: 733 260 345 782 644 756 163 689 524 353 1 778 283 914 91 314 967 340 363 824 81 329 997 337 100 370 20 914 10 461 613 96 74 959 232 71 717 748 761 594 103 764 725 739 679 817 406 0 159 771 824 593 453 174 284 554 545 305 821 908 119 788 358 195 748 591 267 818 340 30 414 796 147 140 537 827 311 944 827 823 716 4 769 170 179 54 78 78 712 252 339 833 41 698 381 143 642 649 962 984 32 729 781 180 223 671 360 535 617 540 711 686 897 481 210 430 889 289 861 602 894 201 436 289 901 818 433 544 821 748 881 206 479 16 740 55 688 453 591 658 347 303 346 245 137 557 28 27 199 890 631 446 93 420 736 347 592 522 244 766 624 479 973 456 848 66 512 889 521 104 549 869 760 896 467 250 806 497 279 6 740 263 453 834 684 543 534 277 418 780 44 43 612 371 500 461 438 13 351 960 470 901 182 583 150 651 835 957 501 467 316 242 731 123 430 416 667 317 47 86 450 92 483 63 816 336 525 256 703 230 569 174 484 753 111 636 757 947 946 611 415 616 206 499 740 637 916 408 308 964 847 759 410 683 824 227 21 702 484 725 933 407 900 771 161 364 760 271 664 59 235 432 676 442 932 417 433 850 826 742 167 27 502 578 711 327 159 733 383 644 811 669 52 65 441 566 430 554 190 96 615 426 529 292 870 815 711 304 666 890 399 186 270 902 766 335 583 926 69 967 923 234 989 329 300 432 248 731 987 440 180 955 219 63 249 90 879 313 747 898 556 147 85 828 403 204 164 987 483 586 307 408 821 297 90 122 82 691 207 423 132 388 379 353 452 981 796 332 295 897 231 205 397 318 34 801 875 551 141 360 138 449 121 961 100 212 436 183 904 644 959 390 386 340 96 839 674 245 525 323 143 757 529 542 428 564 344 657 116 487 18 607 289 140 921 390 705 359 927 962 356 887 353 743 228 802 936 256 49 462 580 545 572 110 88 354 27 786 12 496 626 31 104 916 524 379 660 230 739 588 193 448 476 900 545 58 703 482 315 105 297 248 652 870 359 741 225 387 880 238 236 507 622 341 777 147 721 438 730 813 27 925 615 856 178 161 915 234 996 583 341 294 832 346 165 544 440 744 932 322 
output: 260 345 733 644 756 163 689 524 353 1 778 283 782 91 314 914 340 363 824 81 329 967 337 100 370 20 914 10 461 613 96 74 959 232 71 717 748 761 594 103 764 725 739 679 817 406 -1 159 771 824 593 453 174 284 554 545 305 821 908 119 788 358 195 748 591 267 818 340 30 414 796 147 140 537 827 311 944 827 823 716 4 769 170 179 54 78 78 712 252 339 833 41 698 381 143 642 649 962 984 32 729 781 180 223 671 360 535 617 540 711 686 897 481 210 430 889 289 861 602 894 201 436 289 901 818 433 544 821 748 881 206 479 16 740 55 688 453 591 658 347 303 346 245 137 557 28 27 199 890 631 446 93 420 736 347 592 522 244 766 624 479 973 456 848 66 512 889 521 104 549 869 760 896 467 250 806 497 279 6 740 263 453 834 684 543 534 277 418 780 44 43 612 371 500 461 438 13 351 960 470 901 182 583 150 651 835 957 501 467 316 242 731 123 430 416 667 317 47 86 450 92 483 63 816 336 525 256 703 230 569 174 484 753 111 636 757 947 946 611 415 616 206 499 740 637 916 408 308 964 847 759 410 683 824 227 21 702 484 725 933 407 900 771 161 364 760 271 664 59 235 432 676 442 932 417 433 850 826 742 167 27 502 578 711 327 159 733 383 644 811 669 52 65 441 566 430 554 190 96 615 426 529 292 870 815 711 304 666 890 399 186 270 902 766 335 583 926 69 967 923 234 989 329 300 432 248 731 987 440 180 955 219 63 249 90 879 313 747 898 556 147 85 828 403 204 164 987 483 586 307 408 821 297 90 122 82 691 207 423 132 388 379 353 452 981 796 332 295 897 231 205 397 318 34 801 875 551 141 360 138 449 121 961 100 212 436 183 904 644 959 390 386 340 96 839 674 245 525 323 143 757 529 542 428 564 344 657 116 487 18 607 289 140 921 390 705 359 927 962 356 887 353 743 228 802 936 256 49 462 580 545 572 110 88 354 27 786 12 496 626 31 104 916 524 379 660 230 739 588 193 448 476 900 545 58 703 482 315 105 297 248 652 870 359 741 225 387 880 238 236 507 622 341 777 147 721 438 730 813 27 925 615 856 178 161 915 234 996 583 341 294 832 346 165 544 440 744 932 322 997 
It is bubble sort since number at left is greater than the right before list is sorted. Time = 70 millisecond, mysterySort1(a,7). 733 is replaced with 260 and 345. 733 is less than 782 and the number is 644 replaced with 782.

mysterySort2 is Heap Sort
Your evidence: 574 272 227 489 469 325 496 628 873 80 948 554 231 587 146 690 570 332 45 790 543 663 71 893 213 384 991 974 236 763 640 164 37 221 655 860 548 506 491 423 940 793 331 173 383 479 865 307 813 264 100 711 281 525 606 496 911 599 473 502 364 467 668 755 690 678 618 593 538 463 18 480 610 704 7 995 185 226 657 353 492 111 66 776 990 674 626 903 275 453 407 994 922 430 103 967 110 723 562 650 540 934 484 153 640 493 502 828 721 161 183 567 626 603 697 618 279 326 876 908 133 637 256 58 69 362 27 533 439 943 185 982 879 671 137 522 518 993 704 241 509 241 163 137 846 862 110 479 542 988 389 678 627 0 90 51 364 471 586 805 416 774 141 297 799 280 173 320 628 879 915 139 122 80 278 322 297 742 803 193 732 547 873 362 549 317 415 267 790 355 74 560 131 218 212 285 852 387 607 482 621 876 623 97 311 256 422 610 0 579 805 87 480 33 451 31 704 220 300 849 929 729 411 63 301 625 702 155 367 311 992 342 541 969 441 854 227 217 466 582 151 626 671 633 13 476 19 719 50 673 570 981 756 336 398 59 315 102 569 36 767 563 380 311 886 176 167 116 747 988 52 900 968 725 888 335 555 261 56 607 936 981 590 695 671 343 108 988 447 679 27 217 596 761 530 485 291 51 955 41 41 9 295 363 88 537 700 645 800 111 254 91 446 198 140 119 543 250 109 345 284 490 564 234 606 448 721 899 853 30 942 249 41 592 614 483 131 669 130 934 782 738 27 230 291 169 703 188 773 166 535 59 659 453 296 267 255 371 520 111 404 465 362 799 411 978 285 544 649 417 480 785 510 861 369 155 384 74 345 160 243 235 573 256 690 871 877 300 245 399 413 3 218 777 804 631 109 91 178 113 863 12 900 727 876 624 884 262 700 231 776 945 468 352 555 513 577 434 815 824 836 582 181 56 713 988 690 824 433 222 291 650 236 546 379 466 172 265 83 874 851 861 174 673 215 731 540 147 520 709 325 358 293 509 768 8 499 460 187 286 684 480 939 275 28 320 743 202 940 828 431 793 692 959 820 261 44 363 762 566 74 90 278 370 601 49 732 454 863 921 742 902 404 683 179 434 6 924 991 948 
output: 994 993 992 988 990 991 991 982 988 942 978 967 988 974 981 943 981 988 873 940 934 903 948 893 945 836 929 939 969 921 948 767 886 968 936 862 955 800 657 805 899 915 773 803 873 922 865 877 852 900 934 824 824 828 874 768 911 940 959 908 902 924 756 755 690 879 747 900 704 655 695 860 761 704 548 700 645 446 586 564 774 853 614 776 879 703 626 659 742 732 799 649 861 790 573 871 413 813 631 863 884 776 555 815 805 713 502 704 721 861 731 709 702 603 697 743 828 854 876 582 732 863 763 719 673 668 398 533 569 164 563 690 272 671 618 593 888 555 261 628 590 671 343 480 846 610 530 485 542 41 389 678 627 185 254 226 364 543 491 353 490 606 721 790 799 280 592 483 669 793 738 291 674 331 535 322 453 469 520 404 465 663 407 544 549 785 415 384 430 355 235 690 554 300 399 285 804 562 607 482 650 876 624 700 311 484 422 610 434 711 582 281 690 433 451 650 546 466 300 851 231 729 540 520 567 625 626 499 460 684 587 342 618 599 441 793 820 261 762 566 278 626 671 633 742 476 683 434 467 640 570 362 146 336 27 59 315 102 439 36 69 185 380 311 678 176 167 116 37 137 52 570 522 725 518 335 538 221 56 607 241 509 463 241 18 163 108 137 447 679 27 217 596 110 332 479 291 51 489 7 41 9 295 363 88 537 506 45 0 111 90 91 51 198 140 119 471 250 109 345 284 423 416 234 492 448 141 297 574 30 111 249 41 66 173 320 131 628 130 80 782 543 27 230 139 169 122 188 80 166 278 59 173 297 296 267 255 371 275 111 193 453 362 547 411 383 285 479 362 417 480 317 510 71 369 155 267 74 345 160 243 103 74 256 560 307 131 218 245 110 212 3 218 777 723 387 109 91 178 113 264 12 621 727 876 540 623 262 97 231 213 256 468 352 100 513 577 153 0 640 579 325 181 56 87 480 493 33 384 222 291 31 236 525 379 220 172 265 83 849 606 161 174 673 215 411 183 147 63 301 325 358 293 509 496 8 155 367 187 286 311 480 496 275 28 320 541 202 279 236 431 473 692 227 326 217 44 363 466 502 74 90 151 370 601 49 133 454 364 13 637 256 404 19 179 227 6 58 50 995 
mysterySort2 is heap sort since it constructed a priority queue like tree and allowed smallest number to be the root and largest number to be root of the tree. Then moved to build structure. Used mysterySort2(a,7) 70ms and larger number came to the front.

mysterySort3 is Insertion Sort
Your evidence
output

Insertion Sort since the smaller number is 1st searched and inserted between the number, looks for the number and insert until the list is sort. At 70 ms, 22 is less than number on the left, so it is inserted 1st position. After which 254 is inserted after 22. 132 is inserted between 22 and 254.

mysterySort4 is Quick Sort
Your evidence: 234 272 467 817 856 369 568 478 346 656 477 994 456 735 782 986 720 517 928 55 753 693 348 921 435 607 544 506 965 645 810 553 271 631 372 129 2 295 961 703 305 441 699 763 530 483 751 253 354 681 310 109 377 12 32 814 621 578 674 940 578 838 847 203 471 221 687 476 870 650 181 178 445 234 295 978 72 49 233 428 84 897 540 463 263 926 631 886 859 660 180 791 500 29 996 974 604 685 804 829 690 339 9 137 575 306 117 649 709 704 80 796 603 974 613 220 254 599 108 115 613 642 260 115 673 611 443 632 650 601 463 342 942 826 834 520 486 953 523 198 12 605 348 969 933 315 192 190 916 654 659 531 299 922 1 326 535 798 960 187 402 777 884 346 605 720 220 94 27 98 646 41 705 996 365 993 313 559 185 584 215 846 469 868 122 472 197 659 273 511 201 29 643 87 729 250 161 952 698 190 52 346 586 111 696 953 106 12 514 645 950 83 494 421 306 618 248 505 632 875 370 187 906 15 276 637 620 791 943 320 983 349 669 571 463 367 878 923 733 746 571 37 832 419 461 140 391 63 -1 377 940 723 566 848 93 196 839 715 989 785 37 327 136 708 900 953 430 133 231 517 881 156 557 67 577 20 561 322 437 914 702 379 640 622 581 735 821 422 804 812 561 843 141 52 906 396 359 690 883 592 209 766 750 768 188 681 142 751 6 581 668 62 962 662 686 897 751 861 322 557 28 237 402 523 291 662 273 653 354 158 247 566 927 352 688 117 35 833 222 395 768 244 811 733 908 500 984 661 715 308 572 745 900 329 271 193 993 898 848 350 59 450 270 340 156 960 811 193 795 35 943 566 282 756 653 544 610 991 208 328 654 134 427 556 465 52 751 461 953 954 165 366 758 437 708 916 751 521 463 901 910 408 821 194 519 828 741 131 821 303 813 477 439 243 35 259 649 141 722 604 97 241 972 209 680 34 127 785 909 592 688 822 355 511 370 876 693 465 361 517 770 177 996 564 774 386 825 425 529 901 384 980 144 710 191 178 747 672 317 658 618 8 834 975 873 207 205 569 674 569 88 799 100 438 717 876 178 896 303 709 151 41 691 297 754 236 829 855 910 148 867 531 510 704 860 386 913 420 309 941 
output: 148 41 151 178 100 88 205 207 8 178 191 144 177 127 34 209 97 141 35 55 131 194 165 52 134 208 35 193 156 59 193 222 35 117 158 129 2 28 62 6 142 188 209 52 141 20 67 156 231 133 136 109 37 12 32 196 93 -1 63 140 37 15 187 203 83 221 12 106 111 52 181 178 190 234 161 87 72 49 233 29 84 201 197 122 215 185 41 98 27 94 180 220 187 29 1 190 192 12 198 115 115 108 9 137 220 80 117 234 709 704 649 796 603 974 613 306 254 599 575 339 613 642 260 690 673 611 443 632 650 601 463 342 942 826 834 520 486 953 523 829 804 605 348 969 933 315 685 604 916 654 659 531 299 922 974 326 535 798 960 996 402 777 884 346 605 720 500 791 660 859 646 886 705 996 365 993 313 559 631 584 926 846 469 868 263 472 463 659 273 511 540 897 643 428 729 250 978 952 698 295 445 346 586 650 696 953 870 476 514 645 950 687 494 421 306 618 248 505 632 875 370 471 906 847 276 637 620 791 943 320 983 349 669 571 463 367 878 923 733 746 571 838 832 419 461 578 391 940 674 377 940 723 566 848 578 621 839 715 989 785 814 327 377 708 900 953 430 310 681 517 881 354 557 253 577 751 561 322 437 914 702 379 640 622 581 735 821 422 804 812 561 843 483 530 906 396 359 690 883 592 763 766 750 768 699 681 441 751 305 581 668 703 962 662 686 897 751 861 322 557 961 237 402 523 291 662 273 653 354 295 247 566 927 352 688 372 631 833 271 395 768 244 811 733 908 500 984 661 715 308 572 745 900 329 271 553 993 898 848 350 810 450 270 340 645 960 811 965 795 506 943 566 282 756 653 544 610 991 544 328 654 607 427 556 465 435 751 461 953 954 921 366 758 437 708 916 751 521 463 901 910 408 821 348 519 828 741 693 821 303 813 477 439 243 753 259 649 928 722 604 517 241 972 720 680 986 782 785 909 592 688 822 355 511 370 876 693 465 361 517 770 735 996 564 774 386 825 425 529 901 384 980 456 710 994 477 747 672 317 658 618 656 834 975 873 346 478 569 674 569 568 799 369 438 717 876 856 896 303 709 817 467 691 297 754 236 829 855 910 272 867 531 510 704 860 386 913 420 309 941 

It is Quick Sort because pivot is initiated randomly. Then it is compared to 1st and last numbers. It 1st > than last, it is switched with last one. Used mystertSort4(a,3) 30 ms. The evidence end one is large than 1st, so the last ones remain the same like it was before sorting.

mysterySort5 is Selection Sort
Your evidence: 164 151 123 563 61 516 112 330 114 423 544 112 626 631 151 163 614 40 246 21 466 460 562 152 446 531 435 114 444 444 32 4 144 656 564 312 463 315 662 244 511 555 106 414 541 455 640 326 550 646 532 334 464 60 545 103 521 314 441 635 413 511 226 620 445 561 341 601 633 353 442 366 141 34 114 143 545 146 521 465 144 51 444 201 141 316 466 356 226 115 14 405 321 12 460 140 114 511 224 102 104 516 516 515 561 240 241 21 435 561 561 651 126 660 536 435 246 121 514 241 543 101 431 166 641 633 464 145 404 103 602 163 215 416 21 143 414 61 654 166 146 420 20 641 441 216 363 414 641 632 441 426 440 514 413 666 365 611 166 66 616 446 315 206 100 441 401 215 534 252 416 463 442 565 36 110 426 460 220 415 120 53 614 351 204 214 44 614 442 666 34 414 340 416 334 521 454 54 161 311
output: 4 12 14 20 61 516 112 330 114 423 544 112 626 631 151 163 614 40 246 21 466 460 562 152 446 531 435 114 444 444 32 164 144 656 564 312 463 315 662 244 511 555 106 414 541 455 640 326 550 646 532 334 464 60 545 103 521 314 441 635 413 511 226 620 445 561 341 601 633 353 442 366 141 34 114 143 545 146 521 465 144 51 444 201 141 316 466 356 226 115 123 405 321 151 460 140 114 511 224 102 104 516 516 515 561 240 241 21 435 561 561 651 126 660 536 435 246 121 514 241 543 101 431 166 641 633 464 145 404 103 602 163 215 416 21 143 414 61 654 166 146 420 563 641 441 216 363 414 641 632 441 426 440 514 413 666 365 611 166 66 616 446 315 206 100 441 401 215 534 252 416 463 442 565 36 110 426 460 220 415 120 53 614 351 204 214 44 614 442 666 34 414 340 416 334 521 454 54 161 311
	
The 5th one is Selection Sort since it chooses smallest number and switch with 1st position, so on until numbers are completely sorted. Used 70 ms which shows 1st smallest number is 4 followed by 6.

——————————————————
How many hours did you take to complete this assignment?
6

How difficult did you find this assignment from a scale of 0-10 where 10 represents the hardest?
5

What challenges did you encounter? And how did you address them?
Ran tests for mysterySort2 and 3 multiple times to conclude. Trie algorithm.